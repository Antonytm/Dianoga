<!--
	Configures Dianoga to optimize images using webp format
	By default if browser will sent "image/webp" in accept header then cwebp optimizer will be used.
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<pipelines>
			<!-- Lossless compression only makes sense for PNG files-->
			<dianogaOptimizePng>
				<processor type="Dianoga.Optimizers.Pipelines.DianogaWebP.WebPOptimizer, Dianoga" patch:before="processor[1]">
					<ExePath>/App_Data/Dianoga Tools/libwebp-1.0.2-windows-x64/bin/cwebp.exe</ExePath>
					<AdditionalToolArguments>-q 100 -m 6 -lossless</AdditionalToolArguments>
				</processor>
			</dianogaOptimizePng>

			<getMediaStream>
				<!-- Parse HTTP request headers to define if browser support WebP format -->
				<processor type="Dianoga.Invokers.MediaCacheAsync.Pipelines.GetMediaStream.ParseAcceptHeaders, Dianoga" patch:before="processor[1]" />
			</getMediaStream>
		</pipelines>
		<!-- Hack: make media provider switch content type of response from application/octet-stream to imape/webp-->
		<mediaLibrary>
			<mediaTypes>
				<mediaType name="WebP image" extensions="webp">
					<mimeType>image/webp</mimeType>
					<forceDownload>false</forceDownload>
					<sharedTemplate>system/media/unversioned/image</sharedTemplate>
					<versionedTemplate>system/media/versioned/image</versionedTemplate>
				</mediaType>
			</mediaTypes>
			<requestProtection>
				<protectedMediaQueryParameters>
					<parameter description="extension" name="extension"/>
				</protectedMediaQueryParameters>
			</requestProtection>
		</mediaLibrary>

		<!--Enable this section if you are running Dianoga under CDN. Otherwise CDN could cache webp response and return it for browsers that don't support it -->
		<!--
		<settings>
			<setting name="MediaResponse.VaryHeader">
				<patch:attribute name="value">Accept</patch:attribute>
			</setting>
		</settings>
		-->
	</sitecore>
</configuration>